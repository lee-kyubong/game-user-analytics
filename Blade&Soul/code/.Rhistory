data(Boston)
library(ISLR)
data(Boston)
library(MASS)
data(Boston)
head(Boston)
dim(Boston)
library(MASS)
data(Boston)
head(Boston)
dim(Boston)
View(Boston)
?Boston
?sample
idx <- sample(nrow(Boston) * 0.6)
trset <- Boston[idx,]
tset <- Boston[!idx,]
tset <- Boston[-idx,]
idx <- sanple(1:nrow(Boston), nrow(Boston) * .6)
idx <- sample(1:nrow(Boston), nrow(Boston) * .6)
trset <- Boston[idx,]
tset <- Boston[-idx,]
answer <- tset$medv
tset <- tset[, -ncol(tset)]
install.packages('PerfomanceAnalytics)
install.packages('PerfomanceAnalytics')
install.packages('PerfomanceAnalytics')
install.packages('PerfomanceAnalytics')
library(PerformanceAnalytics)
install.packages('PerfomancesAnalytics')
install.packages('PerfomanceAnalytics')
library(corrplot)
corrplot(tset)
corrplot(trset)
View(trset)
summary(trset)
str(trset)
?corrplot
corrplot(trset, method = 'circle')
library(corrplot)
corrplot(trset, method = 'circle')
corrplot(cor(trset), method = 'circle')
?Boston
corrplot(cor(trset), method = 'shade')
corrplot(cor(trset), method = 'square')
corrplot(cor(trset), method = 'ellipse')
corrplot(cor(trset), method = 'pie')
corrplot(cor(trset), method = 'number')
corrplot(cor(trset), method = 'circle')
plot(trset)
lm1 <- lm(medv ~. data= trset)
lm1 <- lm(medv ~., data= trset)
summary(lm1)
predict(lm1, tset)
rmse <- mean(sum((answer - predict(lm1, tset))^2))
rmse
rmse <- mean((answer - predict(lm1, tset))^2)
rmse
x <- model.matrix(medv ~., trset)
y <- answer
library(glmnet)
lasso1 <- glmnet(x, y, alpha = 1)
lasso1 <- glmnet(x, trset$medv, alpha = 1)
plot(lasso1)
cv.out = cv.glmnet(x, trset$medv, alpha = 1)
lasso.pred <- predict(lasso1, s = cv.out$lambda.min, newx = tset)
lasso.pred <- predict(lasso1, s = cv.out$lambda.min, newx = as.matrix(tset))
set.seed(1)
x <- model.matrix(medv~., Boston)[, -1]
y <- Boston$medv
grid = 10^seq(10, -2, length = 100)
lasso.mod = glmnet(x[idx,], y[idx], alpha = 1, lambda = grid)
set.seed(1)
cv.out = cv.glmnet(x[-idx,], y[-idx], alpha = 1)
cv.out = cv.glmnet(x[idx,], y[idx], alpha = 1)
lasso.pred <- predict(lasso.mod, s = cv.out$lambda.min, newx = x[-idx,])
mean((lasso.pred - answer)^2)
x <- matrix(c(1:20), 4, 5)
min(apply(x, 1, mean) + max(apply(x, 2, mean))
min(apply(x, 1, mean) + max(apply(x, 2, mean))
min(apply(x, 1, mean)) + max(apply(x, 2, mean))
apply(x, 1, mean))
apply(x, 1, mean)
x
apply(x, 2, mean)
b <- matrix(c(1/2, 0, -1/2))
norm(b)
b
b / norm(b)
norm(b, 'f')
x <- matrix(c(1:20), 4, 5)
x
View(Boston)
View(data_x)
View(data_y)
View(data0)
dim(data0)
summary(data0)
data(Setosa)
data(Iris)
data(iris)
ex <- data(iris)
dim(ex)
ex <- iris
dim(ex)
summary(ex)
barplot(ex$Species)
barplot(ex$Species, ex$Sepal.Length)
type(iris)
table(iris)
table(ex)
View(train)
type(iris$Sepal.Length)
class(iris$Sepal.Length)
class(iris)
sleep
dim(sleep)
?sleep
head(sleep)
summary(sleep)
type(sleep$group)
class(sleep$group)
class(sleep$extra)
y <- sleep
t.test(y)
t.test(y$extra[sleep$group == 1])
t.test(sleep$extra[sleep$group == 1] - sleep$extra[sleep$group == 2])
t.test(sleep$extra[sleep$group == 2] - sleep$extra[sleep$group == 1])
t.test(sleep$extra[sleep$group == 2], sleep$extra[sleep$group == 1])
plot(sleep$group)
plot(sleep$extra)
plot(sleep$group)
plot(sleep$extra)
plot(sleep$ID
plot(sleep$ID)
plot(sleep$ID)
plot(sleep$extra)
hist(sleep$extra)
line(density())
line(density(sleep$extra))
line(density(sleep$extra), lty = 2)
hist(sleep$extra)
line(density(sleep$extra), lty = 2)
barplot(sleep$group)
barplot(sleep$extra)
str(sleep)
summary(sleep)
rm(list = ls())
dev.off
dev.off()
?mpg
summary(mpg)
library(ggplot2)
library(dplyr)
?mpg
head(mpg)
str(mpg)
par(mfrow = c(2, 2))
barplot(mpg$model)
barplot(mpg$model)
dev.off()
barplot(mpg$model)
qqline(mpg$hwy)
library(ggplot2)
library(dplyr)
qqline(mpg$hwy)
qqnorm(mpg$hwy)
qqline(mpg$hwy)
hist(mpg$hwy)
summary(mpg$hwy)
boxplot(mpg$hwy)
set.seed(1606)
n <- 100
p <- .5
x <- rbinom(n, 1, p)
x <- factor(x, levels = c(0,1), labels = c('no', 'yes'))
x
barplot(x)
table(x)
barplot(table(x))
barplot(mpg$hwy)
summary(mpg$hwy)
hist(mpg$hwy)
plot(mpg$hwy)
barplot(table(sleep$group))
ggplot(mpg, aes(cty, hwy)) + geom_jitter()
ggplot(mpg, aes(cty, hwy)) + geom_jitter() + geom_smooth(method = 'lm')
a = [1, 2, 3]
a = [1, 2, 3]
a = list(1, 2, 3)
a
a[0]
a[1]
class(a)
test = iris
test[1,1]
View(test)
head(test)
summary(test)
dim(test)
class(teest)
class(test)
colnames(test)
row.names(test)
rownames(test)
colname <- ['a', 'b', 'c']
colnames[1] <- 'test'
colnames[1]
colnames(test)
colnames(test)[1] <- 'ttest'
colnames(test) <- ['a', 'b', 'c', 'd', 'e']
colnames(test)[:] <- ['a', 'b', 'c', 'd', 'e']
colnames(test)[:]
colnames(test)[:]
colnames(test)[0]
colnames(test)
colnames(test)[1]
colnames(test)[:]
test
idx <- test[ttest > 6]
idx <- test[test$ttest > 6]
idx <- test[test$ttest > 6, ]
idx
idx <- test$ttest > 6
idx
test[test$ttest > 6]
test[test$ttest > 6, ]
test[test$ttest > 6, 1]
test[idx]
test[idx,]
test[test$ttest >6,]
test[ttest > 6]
test[test$ttest > 6]
test[test$ttest > 6, ]
View(test)
test[test$Species == 'setosa']
test[test$Species == 'setosa',]
test[test$Species == 'setosa' or 'versicolor',]
test[test$Species == 'setosa' or test$Species'versicolor',]
test[test$Species == 'setosa' or test$Species == 'versicolor',]
test[test$Species == 'setosa' OR test$Species == 'versicolor',]
test[test$Species == 'setosa' AND test$Species == 'versicolor',]
test[test$Species == 'setosa' | test$Species == 'versicolor',]
?as.matrix
a1 <- as.matrix([1, 2, 3, 4, 5, 6, 7, 8, 9], nrow = 3)
a1 <- as.matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3)
a1
a1 <- as.matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3)
a1
a1 <- as.matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = T)
a1
a1 <- as.matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = F)
a1
a1 <- as.data.frame(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = F)
a1
a1 <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8, 9), nrow = 3, ncol = 3, byrow = F)
a1
?sapply
sapply(a1, sum)
a1
sapply(a1, sum())
sapply(a1, mean)
sapply(a1, quantile)
a1
lapply(a1, mean)
lapply(a1, 0, mean)
lapply(a1, 1, mean)
sapply(a1, 1, quantile)
sapply(a1, 1, mean)
apply(a1, 1, mean)
apply(a1, 0, mean)
apply(a1, 2, mean)
a1
apply(a1, 2, mean)
apply(a1, 1, mean)
apply(a1, 2, sum)
sapply(setosa, sum)
sapply(iris, sum)
sapply(iris, mean())
sapply(iris, mean
sapply(iris, mean
)
test2 <- test[2:,]
test2 <- test[2:,:]
View(test)
test2 <- test[2:,:]
test2 <- test[c(2, 3, 4), :]
test2 <- test[c(2, 3, 4), ]
View(test2)
test2 <- test[, 2:4]
View(test2)
View(test)
View(test)
test2 <- test[, -c('ttest', 'Species')]
test2 <- test[, -'ttest']
test2 <- test[, -c('ttest')]
test2 <- test[, -colnames('ttest')]
test2 <- test[, !'ttest']
test2 <- test[, 'ttest']
test2 <- test[, -c(1, 2)]
View(test2)
cor(test$Sepal.Width, test$Petal.Length)
tt = (3, 4, 5)
tt = c(3, 4, 5)
type(tt)
class(tt)
tt
list(tt)
type(list(tt))
class(list(tt))
rm(list = ls())
dev.off()
dev.off()
rm(list = ls())
dev.off()
rm(list = ls())
rm(list = ls())
setwd("~/user-analysis/Blade&Soul/code")
tr_activity <- read.csv('/Users/kyubonglee/Desktop/final_data_rev/train/train_activity.csv')
tr_lable <- read.csv('/Users/kyubonglee/Desktop/final_data_rev/train/train_label.csv')
rm(tr_label)
rm(tr_label)
rm(tr_lable)
tr_label <- read.csv('/Users/kyubonglee/Desktop/final_data_rev/train/train_label.csv')
head(tr_label)
hist(tr_label)
table(tr_label)
table(tr_label$label)
len(distinct(tr_activity$acc_id))
length(distinct(tr_activity$acc_id))
length(aggregate(tr_activity$acc_id))
library(dplyr)
length(distinct(tr_activity$acc_id))
length(unique(tr_activity$acc_id))
table(tr_label$label)
length(unique(tr_activity$acc_id))
dim(tr_activity)
colnames(tr_activity)
tr_party <- read.csv('/Users/kyubonglee/Desktop/final_data_rev/train/train_party.csv')
colnames(tr_party)
head(tr_party$hashed)
glimpse(tr_party)
save.image("~/user-analysis/Blade&Soul/untitled folder/Untitled.RData")
3 + 2
glimpse(sample_activity)
summary(tr_label)
head(tr_label)
head(tr_label, n = 20)
head(tr_label, n = 100)
head(tr_label, n = c(2600, 2700))
head(tr_activity)
summary(tr_activity)
summary(tr_party)
colnames(tr_party)
head(tr_activity)
idx <- tr_activity[tr_activity$acc_id == '3dc6f2875dc6e6f35b9e2bdb25b391a8003386ff23becd109415062b2bd58709', ]
tr_activity[idx, ]
idx
test1 <- tr_activity[tr_activity$acc_id == '3dc6f2875dc6e6f35b9e2bdb25b391a8003386ff23becd109415062b2bd58709', ]
rm(idx)
test2 <- tr_activity[tr_activity$acc_id == 'b8856358ff62e596fa07e3e40b8e7fd4b7729263c72b442803c4f22e41d6198b',]
View(test2)
View(test1)
getwd()
write.csv(test1, 'test1.csv')
write.csv(test2, 'test2.csv')
c <- c(3, 4, 5, 7, 8)
var(c)
mean(c)
b <- c(7, 8)
var(b)
a <- c(1, 2, 3, 4, 5, 6, 7, 8)
var(a)
d <- c(5, 8)
var(d)
ㅁ
a
b
c
d
var(a) / 8
var(c) / 5
var(b) / 2
var(d) / 2
a
b
c
d
e <- c(1, 3, 5, 7)
length(unique(tr_activity$acc_id))
